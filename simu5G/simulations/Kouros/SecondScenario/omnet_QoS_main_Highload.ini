[General]
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${ue}-${scheduler}-${scenario}.sca
output-vector-file = ${resultdir}/${configname}/${ue}-${scheduler}-${scenario}.vec
**.vector-recording = true

################ Mobility parameters #####################

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false


*.numUe = ${ue=1,5,10,25,50}

**.mac.schedulingDiscipline* = ${scheduler="QOS_PF", "LYAPUNOV_SCHEDULER"}

 
############### Transmission Power ##################
**.ueTxPower = 26dBm
**.eNodeBTxPower = 40dBm
**.targetBler = 0.01
**.blerShift = 5

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


############## Component carrier
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = 10 #Number of Resource Blocks - equal to the number of RBs
*.carrierAggregation.componentCarrier[0].numerologyIndex = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 5.9GHz ##5.9

*.gnb.cellularNic.channelModel[0].numerologyIndex = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### Indoor Factory Profile #################
#INDOOR_FACTORY_SL - Sparse clutter, Low BS /.d_clutter = 10m /.clutter_density_r =0.39 #lower than 0.4 /.hClutter = 10m
#INDOOR_FACTORY_DL - Dense clutter, Low BS /.d_clutter = 2m /.clutter_density_r = 0.4 #greater than 0.4 /.hClutter = 5m
#INDOOR_FACTORY_SH - Sparse clutter, High BS /.d_clutter = 10m /.clutter_density_r = 0.39 #lower than 0.4 / .hClutter = 10 #m lower than ceilingHeight (0-10)
#INDOOR_FACTORY_DH - Dense clutter, High BS / .d_clutter = 2m / .clutter_density_r = 0.4 #greater than 0.4 / .hClutter = 10m
#INDOOR_FACTORY_HH - high Tx, high Rx / .d_clutter = 10m /.clutter_density_r = 0.39 / .hClutter = 15m
**.channelModel.scenario = ${scenario="INDOOR_FACTORY_SL", "INDOOR_FACTORY_DL", "INDOOR_FACTORY_SH", "INDOOR_FACTORY_DH"}
**.channelModel.d_clutter = 10m
**.channelModel.clutter_density_r = 0.39
**.channelModel.hClutter = 10m

**.dynamic_los= true
#------------------------------------#
# Config Standalone
#
# Topology configuration for the exemplary scenario for NR Standalone deployment
#
[Config Standalone]
network = simu5g.simulations.NR.networks.SingleCell_Standalone_Drb
sim-time-limit=100s

############### e/gNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m
*.gnb.cellularNic.nrRxSdapEntity.qfiContextFile = "qfi_drb_mapping_config.txt"
*.gnb.cellularNic.numDrbs = 7
*.gnb.cellularNic.rlc.drbIndex = 0
*.gnb.cellularNic.mac.amcType = "NRAmc"





# connect the UE's NIC to the corresponding serving gNB (NR side only)
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# UE position
*.ue[0].mobility.initialX = 450m
*.ue[0].mobility.initialY = 400m
*.ue[1].mobility.initialX = 400m
*.ue[1].mobility.initialY = 350m
*.ue[2].mobility.initialX = 500m
*.ue[2].mobility.initialY = 300m
*.ue[3].mobility.initialX = 500m
*.ue[3].mobility.initialY = 350m
*.ue[4].mobility.initialX = 400m
*.ue[4].mobility.initialY = 300m
#------------------------------------#
*.ue[*].**.NrTxSdapEntity.debug = true
*.ue[*].**.NrTxSdapEntity.verbose = true
*.**.NrTxSdapEntity.* = debug
*.ue[*].cellularNic.nrTxSdapEntity.qfiContextFile = "qfi_drb_mapping_config.txt"
*.ue[*].cellularNic.numDrbs = 7
*.ue[*].cellularNic.rlc.drbIndex = 0
#------------------------------------#
# Buffer size
*.ue[*].cellularNic.nrRlc[*].**.queueSize=1000B
*.ue[*].cellularNic.nrMac.queueSize = 1000B
*.ue[*].cellularNic.rlc.*.queueSize = 1000B
*.ue[*].cellularNic.mac.queueSize=1000B

*.gnb.cellularNic.nrRlc[*].**.queueSize=1000B
*.gnb.cellularNic.nrMac.queueSize = 1000B
*.gnb.cellularNic.rlc.*.queueSize = 1000B
*.gnb.cellularNic.mac.queueSize=1000B


#------------------------------------#
# Config VoIP-DL
#
# General configuration for Voice-over-IP DL traffic to the UE
#
[Config VoIP-DL]
extends=Standalone

# multiple UDP applications for each UE
*.ue[*].numApps = 3

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps)
*.server.numApps = 3

#============= Application Setup =============


#============= UE Setup (Receivers) =============
# Each UE has three sink applications to receive the different traffic types.
*.ue[*].app[*].typename = "UdpSinkApp"

# Configure each sink to listen on its designated port.
*.ue[*].app[0].display-name = "vehicle control sink"
*.ue[*].app[0].io.localPort = 1000

*.ue[*].app[1].display-name = "video sink"
*.ue[*].app[1].io.localPort = 1001

*.ue[*].app[2].display-name = "best effort sink"
*.ue[*].app[2].io.localPort = 1002


#============= Server Setup (Sender) =============
# The server has three source applications, one for each traffic type.
*.server.app[*].typename = "UdpSourceApp"

# --- Server App 0: Vehicle Control ---
*.server.app[0].display-name = "vehicle control source"
*.server.app[0].io.destAddress = "ue[*]"  # Sends traffic to all UEs
*.server.app[0].io.destPort = 1000
*.server.app[0].source.packetLength = 150B
*.server.app[0].source.productionInterval = 300us
*.server.app[0].source.qfi = 4

# --- Server App 1: Video ---
*.server.app[1].display-name = "video source"
*.server.app[1].io.destAddress = "ue[*]"
*.server.app[1].io.destPort = 1001
*.server.app[1].source.packetLength = int(200B + bernoulli(0.05) * 1000B)
*.server.app[1].source.productionInterval = 200us
*.server.app[1].source.qfi = 2

# --- Server App 2: Best Effort ---
*.server.app[2].display-name = "BestEffort source"
*.server.app[2].io.destAddress = "ue[*]"
*.server.app[2].io.destPort = 1002
*.server.app[2].source.packetLength = int(64B + bernoulli(0.3) * 1386B)
*.server.app[2].source.productionInterval = 200us
*.server.app[2].source.qfi = 7

# --- Common Timing for Server Apps ---
*.server.app[*].startTime = uniform(0s,0.02s)
*.server.app[*].source.initialProductionOffset = uniform(0ms, 5ms)
#------------------------------------#



#------------------------------------#
# Config VoIP-UL
#
# General configuration for Voice-over-IP UL traffic from the UE
#
[Config UDP-UL]
extends=Standalone


**.uplink_interference = true
############## Scheduler configuration ##################

# multiple UDP applications for each UE
*.ue[*].numApps = 3

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps)
*.server.numApps = 3

#============= Application Setup =============
*.server.app[*].typename = "UdpSinkApp"
*.server.app[0].display-name = "vehicle control"
*.server.app[0].io.localPort = 1000
*.server.app[1].display-name = "video"
*.server.app[1].io.localPort = 1001
*.server.app[2].display-name = "best effort"
*.server.app[2].io.localPort = 1002

*.ue[*].app[0].typename = "UdpSourceApp"
*.ue[*].app[0].display-name = "vehicle control"
*.ue[*].app[0].io.destAddress = "server"
*.ue[*].app[0].io.destPort = 1000
*.ue[*].app[0].source.packetLength = 150B
#*.ue[*].app[0].source.productionInterval = intuniform(44ms, 45ms)
####Highload
*.ue[*].app[0].source.productionInterval = 300us




*.ue[*].app[1].typename = "UdpSourceApp"
*.ue[*].app[1].display-name = "video"
*.ue[*].app[1].io.destAddress = "server"
*.ue[*].app[1].io.destPort = 1001
# --- 30 FPS Video Stream (using intuniform) ---
# This expression creates a bimodal distribution:
# - 95% of packets will be 200B (small P/B-frames)
# - 5% of packets will be 1000B (large I-frames)
*.ue[*].app[1].source.packetLength = int(200B + bernoulli(0.05) * 1000B)
# Packet interval is fixed to match a 30 FPS camera
#*.ue[*].app[1].source.productionInterval = 33.3ms
####highload
*.ue[*].app[1].source.productionInterval = 200us


# --- 60 FPS Video Stream (using intuniform) ---
# Packet interval is fixed to match a 60 FPS camera (1s / 60)
#*.ue[*].app[1].source.productionInterval = 16.7ms
#*.ue[*].app[1].source.packetLength = intuniform(150B, 1450B)


# Packet size is a random integer between 200 and 1450 bytes.
# Covers P/B-frames and larger I-frames.
#*.ue[*].app[1].source.packetLength = intuniform(200, 1450)*1B
##########

*.ue[*].app[2].typename = "UdpSourceApp"
*.ue[*].app[2].display-name = "BestEffort"
*.ue[*].app[2].io.destAddress = "server"
*.ue[*].app[2].io.destPort = 1002
*.ue[*].app[2].source.packetLength = int(64B + bernoulli(0.3) * 1386B)
#*.ue[*].app[2].source.productionInterval = pareto_shifted(1.2, 12ms, 1ms)
### Highload
*.ue[*].app[2].source.productionInterval = 200us



*.ue[*].app[0].source.qfi = 4
*.ue[*].app[1].source.qfi = 2
*.ue[*].app[2].source.qfi = 7


*.ue[*].app[*].startTime = uniform(0s,0.02s)                           
*.ue[*].app[*].source.initialProductionOffset = uniform(0ms, 5ms)






#------------------------------------#




