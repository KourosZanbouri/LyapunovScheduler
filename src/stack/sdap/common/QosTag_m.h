//
// Generated file, do not edit! Created by opp_msgtool 6.1 from inet/queueing/source/../../../../../Simu5G/src/stack/sdap/common/QosTag.msg.
//

#ifndef __SIMU5G_QOSTAG_M_H
#define __SIMU5G_QOSTAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif


namespace simu5g {

class QosTagBase;
class QosTagReq;
class QosTagInd;

}  // namespace simu5g

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

// cplusplus {{
   using namespace inet;
// }}


namespace simu5g {

/**
 * Class generated from <tt>inet/queueing/source/../../../../../Simu5G/src/stack/sdap/common/QosTag.msg:29</tt> by opp_msgtool.
 * <pre>
 * //
 * // QoS Flow Identifier (QFI) Tag Classes
 * //
 * // These tags are used to attach QFI information to packets as they traverse
 * // the SDAP layer. The tags enable QFI-to-DRB mapping and reverse lookup
 * // during transmission and reception.
 * //
 * // QosTagReq is typically used when sending packets downwards.
 * // QosTagInd is typically used when receiving packets upwards.
 * //
 * class QosTagBase extends inet::TagBase
 * {
 *     uint8_t qfi = 0;  // QFI value (range: 0â€“63), defaults to 0 if not set
 * }
 * </pre>
 */
class INET_API QosTagBase : public ::inet::TagBase
{
  protected:
    uint8_t qfi = 0;

  private:
    void copy(const QosTagBase& other);

  protected:
    bool operator==(const QosTagBase&) = delete;

  public:
    QosTagBase();
    QosTagBase(const QosTagBase& other);
    virtual ~QosTagBase();
    QosTagBase& operator=(const QosTagBase& other);
    virtual QosTagBase *dup() const override {return new QosTagBase(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual uint8_t getQfi() const;
    virtual void setQfi(uint8_t qfi);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const QosTagBase& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, QosTagBase& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>inet/queueing/source/../../../../../Simu5G/src/stack/sdap/common/QosTag.msg:34</tt> by opp_msgtool.
 * <pre>
 * class QosTagReq extends QosTagBase
 * {
 * }
 * </pre>
 */
class INET_API QosTagReq : public ::simu5g::QosTagBase
{
  protected:

  private:
    void copy(const QosTagReq& other);

  protected:
    bool operator==(const QosTagReq&) = delete;

  public:
    QosTagReq();
    QosTagReq(const QosTagReq& other);
    virtual ~QosTagReq();
    QosTagReq& operator=(const QosTagReq& other);
    virtual QosTagReq *dup() const override {return new QosTagReq(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const QosTagReq& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, QosTagReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>inet/queueing/source/../../../../../Simu5G/src/stack/sdap/common/QosTag.msg:38</tt> by opp_msgtool.
 * <pre>
 * class QosTagInd extends QosTagBase
 * {
 * }
 * </pre>
 */
class INET_API QosTagInd : public ::simu5g::QosTagBase
{
  protected:

  private:
    void copy(const QosTagInd& other);

  protected:
    bool operator==(const QosTagInd&) = delete;

  public:
    QosTagInd();
    QosTagInd(const QosTagInd& other);
    virtual ~QosTagInd();
    QosTagInd& operator=(const QosTagInd& other);
    virtual QosTagInd *dup() const override {return new QosTagInd(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const QosTagInd& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, QosTagInd& obj) {obj.parsimUnpack(b);}


}  // namespace simu5g


namespace omnetpp {

template<> inline simu5g::QosTagBase *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::QosTagBase*>(ptr.get<cObject>()); }
template<> inline simu5g::QosTagReq *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::QosTagReq*>(ptr.get<cObject>()); }
template<> inline simu5g::QosTagInd *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::QosTagInd*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SIMU5G_QOSTAG_M_H

